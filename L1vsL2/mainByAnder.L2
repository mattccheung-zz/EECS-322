(:main
    (:main
        0 1
        (rdi <- 7)
        (rsi <- 151)
        (call allocate 2)
        (AllocatedArrayAddr <- rax)
        (rdi <- 7)
        (rsi <- 301)
        (call allocate 2)
        ((mem AllocatedArrayAddr 16) <- rax)
        ((mem rsp -8) <- :ret)
        (call :printArray 1)
        :ret
        (return)
    )
    (:printArray
        1 9
        (tmpVar1 <- rdi)
        (tmpVar1 &= 1)
        (cjump tmpVar1 = 0 :isArray :notArray)
        :isArray
        (ArraySize <- (mem rdi 0))
        (IterVar <- 0)
		:loopStart
		(cjump IterVar < ArraySize :loopBody :loopEnd)
        :loopBody
        (rsi <- IterVar)
		((mem rsp 64) <- r11)
		((mem rsp 56) <- r10)
		((mem rsp 48) <- rax)
		((mem rsp 40) <- r9)
		((mem rsp 32) <- r8)
        ((mem rsp 24) <- rdi)
        ((mem rsp 16) <- rsi)
        ((mem rsp 8) <- rdx)
        ((mem rsp 0) <- rcx)
        ((mem rsp -8) <- :retPrintArrayElement)
        (call :printArrayElement 2)
        :retPrintArrayElement
        (rcx <- (mem rsp 0))
        (rdx <- (mem rsp 8))
        (rsi <- (mem rsp 16))
        (rdi <- (mem rsp 24))
		(r8 <- (mem rsp 32))
		(r9 <- (mem rsp 40))
		(rax <- (mem rsp 48))
		(r10 <- (mem rsp 56))
		(r11 <- (mem rsp 64))
        (IterVar++)
        (goto :loopStart)
        :loopEnd
        (rax <- 1)
        (return)
        :notArray
        (rax <- 0)
        (return)
    )
    (:printArrayElement
        2 9
        (FirstArg <- rdi)
        (SecondArg <- rsi)
		(rdi <- SecondArg)
        (rdi <<= 1)
        (rdi++)
		((mem rsp 64) <- r11)
		((mem rsp 56) <- r10)
		((mem rsp 48) <- rax)
		((mem rsp 40) <- r9)
		((mem rsp 32) <- r8)
        ((mem rsp 24) <- rdi)
        ((mem rsp 16) <- rcx)
        ((mem rsp 8) <- rsi)
		((mem rsp 0) <- rdx)
        (call print 1)
		(rdx <- (mem rsp 0))
		(rsi <- (mem rsp 8))
		(rcx <- (mem rsp 16))
        (rdi <- (mem rsp 24))
		(r8 <- (mem rsp 32))
		(r9 <- (mem rsp 40))
		(rax <- (mem rsp 48))
		(r10 <- (mem rsp 56))
		(r11 <- (mem rsp 64))
        (SecondArg <<= 3)
        (SecondArg += 8)
		(rdi <- SecondArg)
        (rdi <<= 1)
        (rdi++)
		((mem rsp 64) <- r11)
		((mem rsp 56) <- r10)
		((mem rsp 48) <- rax)
		((mem rsp 40) <- r9)
		((mem rsp 32) <- r8)
        ((mem rsp 24) <- rdi)
        ((mem rsp 16) <- rcx)
        ((mem rsp 8) <- rsi)
		((mem rsp 0) <- rdx)
        (call print 1)
		(rdx <- (mem rsp 0))
		(rsi <- (mem rsp 8))
		(rcx <- (mem rsp 16))
        (rdi <- (mem rsp 24))
		(r8 <- (mem rsp 32))
		(r9 <- (mem rsp 40))
		(rax <- (mem rsp 48))
		(r10 <- (mem rsp 56))
		(r11 <- (mem rsp 64))
        (FirstArg += SecondArg)
        (InitValue <- (mem FirstArg 0))
        (InitValue &= 1)
		(rdi <- (mem FirstArg 0))
        (cjump InitValue = 0 :isArray2 :notArray2)
        :isArray2
        ((mem rsp -8) <- :retPrintArray)
		((mem rsp 64) <- r11)
		((mem rsp 56) <- r10)
		((mem rsp 48) <- rax)
		((mem rsp 40) <- r9)
		((mem rsp 32) <- r8)
        ((mem rsp 24) <- rdi)
        ((mem rsp 16) <- rcx)
        ((mem rsp 8) <- rsi)
		((mem rsp 0) <- rdx)
        (call :printArray 1)
		:retPrintArray
		(rdx <- (mem rsp 0))
		(rsi <- (mem rsp 8))
		(rcx <- (mem rsp 16))
        (rdi <- (mem rsp 24))
		(r8 <- (mem rsp 32))
		(r9 <- (mem rsp 40))
		(rax <- (mem rsp 48))
		(r10 <- (mem rsp 56))
		(r11 <- (mem rsp 64))
        (return)
        :notArray2
        ((mem rsp 64) <- r11)
		((mem rsp 56) <- r10)
		((mem rsp 48) <- rax)
		((mem rsp 40) <- r9)
		((mem rsp 32) <- r8)
        ((mem rsp 24) <- rdi)
        ((mem rsp 16) <- rcx)
        ((mem rsp 8) <- rsi)
		((mem rsp 0) <- rdx)
        (call print 1)
		(rdx <- (mem rsp 0))
		(rsi <- (mem rsp 8))
		(rcx <- (mem rsp 16))
        (rdi <- (mem rsp 24))
		(r8 <- (mem rsp 32))
		(r9 <- (mem rsp 40))
		(rax <- (mem rsp 48))
		(r10 <- (mem rsp 56))
		(r11 <- (mem rsp 64))
        (return)
    )
)
